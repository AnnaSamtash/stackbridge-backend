openapi: 3.1.0
info:
  version: 1.0.0
  title: WaterTracker Web App
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: |-
    API documentation for project WaterTracker Web App

    This project is a web application for managing the amount of water
      drunk during the day, will calculate a personal daily rate of fluid
      consumption based on client data, and will also provide statistics
      on the amount of fluid drunk per day and month. This allows users
      to adjust their lifestyle and evaluate progress on the path to
      healing the whole organism.

    The project provides the ability to register users, their authentication
      and authorization. In addition, users can create and track their fluid
      intake, edit their data and records of these intakes, view statistics
      of their consumption for a certain period of time, and calculate and
      update the daily rate of fluid intake depending on changes in indicators.

    In addition, the application has a friendly and intuitive user interface
      that allows you to conveniently and quickly perform all the necessary
      actions. The project also ensures the security of users through password
      encryption and identification using tokens.

    **Functionality:**

    User registration and authorization

    Ability to update your data in the application, download the avatar or even
    change the password in a convenient form

    Addition, modification and deletion of records of the amount of consumer
    fluid with the determination of the time of its reception

    Calculation and updating of the personal daily rate of fluid consumption
    depending on changes in indicators

    Displaying detailed statistics for the month and for the day about the
    amount of consumer fluid and percentage of the norm

    **Technology stack used in the project:**

    Node.js - JavaScript server runtime

    Express.js - framework for developing web applications on Node.js

    MongoDB - NoSQL Database

    Node.js - JavaScript server runtime

    Express.js - framework for developing web applications on Node.js

    MongoDB - NoSQL Database

    Mongoose - library for working with MongoDB in Node.js
  contact:
    email: annasamtash@gmail.com
tags:
  - name: Auth
    description: Auth operations.
  - name: Users
    description: Operations about users.
  - name: WaterRate
    description: Operations about waterRate.
  - name: Water
    description: Operations about water record.
servers:
  - url: https://watertracker-app.onrender.com
paths:
  /water:
    post:
      $ref: ../swagger/paths/water/postWater.yaml
  /water/{id}:
    delete:
      $ref: ../swagger/paths/water/{id}/deleteWater.yaml
    patch:
      $ref: ../swagger/paths/water/{id}/patchWater.yaml
  /water/today:
    get:
      $ref: ../swagger/paths/water/getTodayWater.yaml
  /water/{year}/{month}:
    get:
      $ref: ../swagger/paths/water/{year}/{month}/getMonthlyWater.yaml
  /auth/signup:
    post:
      $ref: ../swagger/paths/auth/signUp.yaml
  /auth/signin:
    post:
      $ref: ../swagger/paths/auth/signIn.yaml
  /auth/logout:
    post:
      $ref: ../swagger/paths/auth/logout.yaml
  /auth/forgot-password:
    post:
      $ref: ../swagger/paths/auth/resetEmail.yaml
  /auth/update-password:
    post:
      $ref: ../swagger/paths/auth/resetPassword.yaml
  /users:
    patch:
      $ref: ../swagger/paths/user/patchUser.yaml
  /users/avatar:
    patch:
      $ref: ../swagger/paths/user/patchAvatar.yaml
  /users/current:
    get:
      $ref: ../swagger/paths/user/currentUserInfo.yaml
  /waterRate:
    patch:
      $ref: ../swagger/paths/waterRate/patchWaterRate.yaml
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
